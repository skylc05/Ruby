MODULE input_functions

  FUNCTION read_string(prompt)
    DISPLAY prompt
    RETURN user input as string
  END FUNCTION

  FUNCTION read_float(prompt)
    value = CALL read_string(prompt)
    RETURN value converted to float
  END FUNCTION

  FUNCTION read_integer(prompt)
    value = CALL read_string(prompt)
    RETURN value converted to integer
  END FUNCTION

  FUNCTION read_integer_in_range(prompt, min, max)
    DO
      value = CALL read_integer(prompt)
      IF value < min OR value > max THEN
        DISPLAY "Please enter a value between min and max"
      END IF
    WHILE value < min OR value > max
    RETURN value
  END FUNCTION

  FUNCTION read_boolean(prompt)
    value = CALL read_string(prompt)
    IF value is "yes", "y", "Yes", "YES" THEN
      RETURN true
    ELSE
      RETURN false
    END IF
  END FUNCTION

  FUNCTION print_float(value, decimal_places)
    DISPLAY value rounded to decimal_places
  END FUNCTION

END MODULE

MODULE letter_app

  FUNCTION get_label()
    title = CALL input_functions.read_string("Please enter your title:")
    first_name = CALL input_functions.read_string("Please enter your first name:")
    last_name = CALL input_functions.read_string("Please enter your last name:")
    house_number = CALL input_functions.read_string("Please enter the house or unit number:")
    street_name = CALL input_functions.read_string("Please enter the street name:")
    suburb = CALL input_functions.read_string("Please enter the suburb:")
    postcode = CALL input_functions.read_integer_in_range("Please enter a postcode (0000 - 9999)", 0, 9999)
    
    label = CONCATENATE title, first_name, last_name, house_number, street_name, suburb, postcode
    RETURN label
  END FUNCTION

  FUNCTION get_message()
    subject = CALL input_functions.read_string("Please enter your message subject line:")
    content = CALL input_functions.read_string("Please enter your message content:")
    
    message = CONCATENATE "RE: ", subject, content
    RETURN message
  END FUNCTION

  FUNCTION print_letter(label, message)
    DISPLAY label
    DISPLAY message
  END FUNCTION

  FUNCTION main()
    label = CALL get_label()
    message = CALL get_message()
    CALL print_letter(label, message)
  END FUNCTION

END MODULE
